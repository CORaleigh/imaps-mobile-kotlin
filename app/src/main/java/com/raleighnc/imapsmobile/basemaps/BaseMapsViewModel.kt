package com.raleighnc.imapsmobile.basemaps

import android.app.Application
import android.util.Log
import androidx.lifecycle.AndroidViewModel
import com.arcgismaps.geometry.Geometry
import com.arcgismaps.geometry.GeometryEngine
import com.arcgismaps.mapping.ArcGISMap
import com.arcgismaps.mapping.Basemap
import com.arcgismaps.mapping.PortalItem
import com.arcgismaps.mapping.Viewpoint
import com.arcgismaps.mapping.layers.ImageTiledLayer
import com.arcgismaps.mapping.layers.RasterLayer
import com.arcgismaps.portal.Portal
import com.arcgismaps.portal.PortalGroup
import com.arcgismaps.portal.PortalGroupContentSearchParameters
import com.arcgismaps.portal.PortalItemType
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.asStateFlow


class BaseMapsViewModel(
    application: Application
) : AndroidViewModel(application) {

    private val _maps = MutableStateFlow<List<PortalItem>>(emptyList())
    val maps = _maps.asStateFlow()

    private val _selected = MutableStateFlow(BasemapGroup.MAPS)
    val selected = _selected.asStateFlow()

    private val _selectedBasemap = MutableStateFlow("")
    val selectedBasemap = _selectedBasemap.asStateFlow()

    private val _inRaleigh = MutableStateFlow(false)
    val inRaleigh = _inRaleigh.asStateFlow()

    suspend fun changeBasemap(item: PortalItem, map: ArcGISMap) {
        if (selected.value == BasemapGroup.IMAGES) {
            val basemapMap = ArcGISMap(item)
            basemapMap.load().getOrElse { }
            val reference = basemapMap.basemap.value?.referenceLayers?.first()
            val raster =
                basemapMap.basemap.value?.baseLayers?.filterIsInstance<RasterLayer>()?.first()
            val tiled =
                basemapMap.basemap.value?.baseLayers?.filterIsInstance<ImageTiledLayer>()?.first()
            if (tiled?.spatialReference?.wkid != map.spatialReference?.wkid) {
                if (raster?.item != null) {
                    val newRaster = RasterLayer(item = raster.item!!)
                    newRaster.minScale = null
                    newRaster.maxScale = null
                    val newBasemap = Basemap(baseLayer = newRaster.clone())
                    if (reference != null) {
                        newBasemap.referenceLayers.add(reference.clone())
                    }
                    newBasemap.name = item.title
                    map.setBasemap(newBasemap)
                }
            } else {
                map.setBasemap(Basemap(item = item))
            }
        } else {
            map.setBasemap(Basemap(item = item))
        }
        _selectedBasemap.value = item.itemId
    }

    private suspend fun getMaps(portalGroup: PortalGroup) {
        val params = PortalGroupContentSearchParameters.items(types = listOf(PortalItemType.WebMap))
        portalGroup.findItems(params).onSuccess { resultSet ->
            val basemaps = if (selected.value == BasemapGroup.IMAGES) {
                resultSet.results.sortedByDescending { it.title }
            } else {
                resultSet.results.sortedBy { it.title }
            }
            _maps.value = basemaps
        }.onFailure {
            Log.e("portal error", "Error loading portal items: ${it.message}")
        }
    }

    suspend fun getPortalGroup(id: String) {
        // set the portal
        val portal = Portal("https://www.arcgis.com")
        // create the portal item with the item ID for the Portland tree service data
        val portalGroup = PortalGroup(portal, id)
        portalGroup.load().onSuccess {
            getMaps(portalGroup)
        }.onFailure {
            Log.e("portal error", "Error loading portal group: ${it.message}")
        }
    }

    suspend fun basemapGroupChanged(group: BasemapGroup) {
        _selected.value = group
        val id = when (group) {
            BasemapGroup.MAPS -> "f6329364e80c438a958ce74aadc3a89f"
            BasemapGroup.IMAGES -> "492386759d264d49948bf7f83957ddb9"
            BasemapGroup.ESRI -> "5e4b1873eeed4e448aca4bf930df0cd0"
        }
        getPortalGroup(id)
    }

    fun mapExtentUpdated(viewpoint: Viewpoint) {
        val boundary = createPolygon()
        if (boundary != null) {
            _inRaleigh.value = GeometryEngine.intersects(boundary, viewpoint.targetGeometry)
        }
    }

    fun createPolygon(): Geometry? {
        return Geometry.fromJsonOrNull(boundaryString)
    }
}

enum class BasemapGroup {
    MAPS, IMAGES, ESRI
}

val boundaryString =
    """
{"rings":[[[-8742536.26950873435,4291470.09454848245],[-8742540.66742800735,4290525.93072314],[-8741600.69787412137,4290521.473592042],[-8740660.72908194177,4290516.93615594786],[-8739720.760941714,4290512.31841443945],[-8738780.79371375591,4290507.62036892306],[-8737840.82728830725,4290502.84201900382],[-8736900.861678971,4290497.98336489219],[-8736905.7385163065,4289553.90397947561],[-8735965.85355706885,4289548.96585705131],[-8735970.80949505232,4288604.966876667],[-8735975.7645901572,4287661.04745151568],[-8735980.71884259582,4286717.20756811928],[-8735985.67225323059,4285773.44708915986],[-8735990.62482097931,4284829.76624886692],[-8735995.57654670626,4283886.16490993183],[-8736000.52743062563,4282942.64305889048],[-8736005.47747360356,4281999.20055847429],[-8736010.4266745504,4281055.83764286339],[-8736015.375034336,4280112.55417477991],[-8735076.28972951509,4280107.54425018746],[-8735081.31704249792,4279164.341063749],[-8735086.34350184724,4278221.21717396658],[-8736025.26923192479,4278226.22540366929],[-8736030.21506950632,4277283.18019753415],[-8736969.06199606694,4277288.10746704228],[-8737907.90962617286,4277292.95462195668],[-8738846.758069478,4277297.72166272532],[-8738851.46380503289,4276354.75339094456],[-8737912.6951158382,4276349.9871564284],[-8737917.4797925055,4275407.099071661],[-8737922.26365701668,4274464.2902304912],[-8737927.04670831561,4273521.56086696591],[-8737931.82894724235,4272578.910843919],[-8738870.27875542641,4272583.6738554528],[-8738874.98049578071,4271641.10235423129],[-8739813.35141598992,4271645.78452742379],[-8740751.723244248,4271650.38666790351],[-8741690.09572072141,4271654.90877426509],[-8741694.55764339678,4270712.41412929818],[-8741699.01880784519,4269769.99890905526],[-8741703.47921484523,4268827.66297644],[-8741707.93886458874,4267885.40631804522],[-8741712.397757858,4266943.22879681922],[-8741716.85589366592,4266001.1306466721],[-8740778.96125519834,4265996.61312405858],[-8740783.49822668917,4265054.59497121535],[-8739845.68382749334,4265049.998272391],[-8739850.29960765317,4264108.06011657976],[-8739854.91460451484,4263166.20116761606],[-8738917.26025529765,4263161.52611070313],[-8737979.60670268163,4263156.77114231233],[-8737984.38001976348,4262214.992856117],[-8738921.95402112231,4262219.74702131655],[-8738926.64698993415,4261278.04723542742],[-8739864.1422497388,4261282.72071315814],[-8739868.75489789434,4260341.09930448513],[-8739873.36676354706,4259399.55704915524],[-8740810.70389324427,4259404.14909139],[-8741748.04166874476,4259408.66127511952],[-8742685.38019957393,4259413.09360075],[-8743622.71947224811,4259417.44606809039],[-8744560.05959629267,4259421.718677518],[-8744555.8452884201,4260363.26467599627],[-8745493.265516432,4260367.45813436806],[-8746430.68644600362,4260371.57172041014],[-8747368.10806364566,4260375.6054339502],[-8747364.131618062,4261317.23267128784],[-8748301.63355944678,4261321.18718054239],[-8748297.73597874306,4262262.89425411541],[-8748293.8377361,4263204.68063303456],[-8749231.49930879474,4263208.556564685],[-8750169.16152958386,4263212.352582843],[-8751106.824384965,4263216.06868734024],[-8752044.48786143772,4263219.70487801451],[-8752048.06788991205,4262277.915961232],[-8752985.6525430847,4262281.47163767274],[-8753923.23766714707,4262284.94741301145],[-8754860.82337164879,4262288.34328756947],[-8755798.40964309312,4262291.6592612043],[-8755795.14783126861,4263233.45049987361],[-8756732.814333735,4263236.68711958453],[-8756735.996591026,4262294.895334187],[-8757673.58395585977,4262298.05150553118],[-8758611.17184714042,4262301.12777553592],[-8758614.1944816336,4261359.41424417123],[-8759551.7033444494,4261362.41010660026],[-8760489.21282962523,4261365.32608129364],[-8761426.72267759591,4261368.16216736659],[-8761423.93866773322,4262309.87717654556],[-8762361.52852982655,4262312.63383987732],[-8762358.823602438,4263254.42862214614],[-8763296.4934788961,4263257.10583573859],[-8763293.8676616922,4264198.98014401644],[-8764231.61767580733,4264201.5778812049],[-8764229.07099545,4265143.53183919843],[-8765166.90090130828,4265146.05007229],[-8765164.43338480219,4266088.08368009049],[-8765161.96544940583,4267030.19652564917],[-8765159.49709469266,4267972.38874601573],[-8766097.56624861993,4267974.82827275991],[-8766095.17711192183,4268917.10004639719],[-8766092.78756953962,4269859.45109808911],[-8767031.01641636528,4269861.81143916212],[-8767028.70613213815,4270804.24218136538],[-8767026.39545524679,4271746.75235224422],[-8767024.0843861904,4272689.34171782248],[-8766085.61650692485,4272686.98017930519],[-8766083.225340765,4273629.64847734012],[-8766080.83376840129,4274572.39612049423],[-8766078.4417894166,4275515.22324593831],[-8767017.14882294647,4275517.58598281071],[-8767014.83618304133,4276460.49275615439],[-8767953.62347791158,4276462.77578761615],[-8767951.39020387642,4277405.76233267132],[-8767949.156550331,4278348.82827676926],[-8768888.10363280587,4278351.03194787074],[-8769827.05108132958,4278353.15548631363],[-8769824.97662006319,4279296.30169879645],[-8769822.901806483,4280239.52721361537],[-8770762.00919349864,4280241.57131085265],[-8770760.01384058595,4281184.87661112379],[-8769820.82664022967,4281182.83216797933],[-8769818.75112121738,4282126.21657534409],[-8768879.48444680683,4282124.0915992083],[-8768877.32873427123,4283067.55523718335],[-8768875.17265550233,4284011.09823116381],[-8768873.016210122,4284954.72071841173],[-8768870.85939803906,4285898.42271240056],[-8769810.44551547058,4285900.54912769329],[-8769812.52244643308,4284956.84677378181],[-8770752.02903586254,4284958.89260141924],[-8770754.02574607171,4284015.2694080798],[-8771693.45293061621,4284017.23467548285],[-8772632.88031774946,4284019.11972829886],[-8772631.04334306717,4284962.74357341882],[-8772629.20605600439,4285906.44692561962],[-8773568.79350477457,4285908.25237515848],[-8774508.38125241734,4285909.97758304887],[-8774506.70344284736,4286853.7611774141],[-8774505.02534813434,4287797.62418209482],[-8774503.34696798958,4288741.56673441362],[-8774501.66830233671,4289685.58884784859],[-8773561.76089265011,4289683.86247114465],[-8773560.0019919239,4290627.96386677492],[-8773558.24279171228,4291572.14497432206],[-8773556.483292399,4292516.40555945132],[-8772616.33629281074,4292514.59796854481],[-8771676.18960624,4292512.71004090924],[-8770736.04312291,4292510.74177635554],[-8769795.89710319787,4292508.69317548349],[-8768855.75143733062,4292506.56423814129],[-8768857.91081895865,4291562.305319787],[-8767917.84549673833,4291560.09642023034],[-8766977.78043210879,4291557.80719767883],[-8766975.46109817922,4292502.06535407435],[-8766035.31657549553,4292499.69540784974],[-8765095.17246109247,4292497.24512553588],[-8765097.65174691007,4291552.98778551538],[-8765100.13061127253,4290608.8099222593],[-8765102.60905363411,4289664.71177008655],[-8764162.70524766855,4289662.182437255],[-8763222.8017535191,4289659.57280901074],[-8763225.43964417093,4288715.55510066263],[-8762285.61665688641,4288712.86563326139],[-8761345.79413184524,4288710.09588462021],[-8761342.99637180567,4289654.11266844533],[-8760403.09438808821,4289651.26215602551],[-8759463.19277058169,4289648.33134862315],[-8759466.150399534,4288704.31554369722],[-8758526.32934279181,4288701.3049520487],[-8757586.508802671,4288698.21407965571],[-8756646.68879277073,4288695.04292665329],[-8756643.49136143737,4289639.05716126133],[-8756640.29338615388,4290583.15096845478],[-8756637.09486636147,4291527.3244856298],[-8755697.03543452919,4291524.071399413],[-8754756.97668390349,4291520.7379924953],[-8753816.91850471683,4291517.32426459063],[-8752876.860910574,4291513.83021585178],[-8751936.80379170738,4291510.25584595371],[-8750996.74740846641,4291506.6011559898],[-8750056.69165108353,4291502.86614565086],[-8749116.63653316163,4291499.05081510637],[-8748176.58206831105,4291495.15516450815],[-8748172.66323817521,4292439.4027080955],[-8748168.74374119937,4293383.72986334935],[-8747228.529859513,4293379.75254518352],[-8747224.52969503962,4294324.1586517375],[-8746284.23661707528,4294320.10029971879],[-8746280.15575735457,4295264.58548107278],[-8746276.07420358062,4296209.15019028448],[-8746271.99195503816,4297153.79456480592],[-8745331.45948940888,4297149.65374817047],[-8744390.92773234844,4297145.43253049348],[-8743450.39657405019,4297141.1309114024],[-8742509.86627500877,4297136.74889220763],[-8742514.26868636534,4296192.10740582086],[-8742518.67034846731,4295247.54558400065],[-8742523.07126208395,4294303.06328930892],[-8742527.47142625041,4293358.66075613163],[-8742531.87084173784,4292414.337847014],[-8742536.26950873435,4291470.09454848245]]],"spatialReference":{"wkid":102100,"latestWkid":3857}}
"""